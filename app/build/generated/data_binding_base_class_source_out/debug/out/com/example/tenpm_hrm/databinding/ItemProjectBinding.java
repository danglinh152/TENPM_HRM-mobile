// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemProjectBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ivProjectDelete;

  @NonNull
  public final ImageView ivProjectDetail;

  @NonNull
  public final RelativeLayout projectContainerInformation;

  @NonNull
  public final TextView tvProjectName;

  @NonNull
  public final TextView tvProjectParticipant;

  @NonNull
  public final TextView tvProjectStatus;

  private ItemProjectBinding(@NonNull RelativeLayout rootView, @NonNull ImageView ivProjectDelete,
      @NonNull ImageView ivProjectDetail, @NonNull RelativeLayout projectContainerInformation,
      @NonNull TextView tvProjectName, @NonNull TextView tvProjectParticipant,
      @NonNull TextView tvProjectStatus) {
    this.rootView = rootView;
    this.ivProjectDelete = ivProjectDelete;
    this.ivProjectDetail = ivProjectDetail;
    this.projectContainerInformation = projectContainerInformation;
    this.tvProjectName = tvProjectName;
    this.tvProjectParticipant = tvProjectParticipant;
    this.tvProjectStatus = tvProjectStatus;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemProjectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemProjectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_project, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemProjectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivProjectDelete;
      ImageView ivProjectDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivProjectDelete == null) {
        break missingId;
      }

      id = R.id.ivProjectDetail;
      ImageView ivProjectDetail = ViewBindings.findChildViewById(rootView, id);
      if (ivProjectDetail == null) {
        break missingId;
      }

      RelativeLayout projectContainerInformation = (RelativeLayout) rootView;

      id = R.id.tvProjectName;
      TextView tvProjectName = ViewBindings.findChildViewById(rootView, id);
      if (tvProjectName == null) {
        break missingId;
      }

      id = R.id.tvProjectParticipant;
      TextView tvProjectParticipant = ViewBindings.findChildViewById(rootView, id);
      if (tvProjectParticipant == null) {
        break missingId;
      }

      id = R.id.tvProjectStatus;
      TextView tvProjectStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvProjectStatus == null) {
        break missingId;
      }

      return new ItemProjectBinding((RelativeLayout) rootView, ivProjectDelete, ivProjectDetail,
          projectContainerInformation, tvProjectName, tvProjectParticipant, tvProjectStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
