// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CheckInOutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView RectangleView;

  @NonNull
  public final Button buttonAttendanceCheck;

  @NonNull
  public final RelativeLayout checkIn;

  @NonNull
  public final RelativeLayout checkOut;

  @NonNull
  public final ImageView halfCircleView;

  @NonNull
  public final ImageView ivclockIn;

  @NonNull
  public final ImageView ivclockOut;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final TextView tvTimer;

  @NonNull
  public final TextView tvtimeCheckIn;

  @NonNull
  public final TextView tvtimeCheckOut;

  private CheckInOutBinding(@NonNull RelativeLayout rootView, @NonNull ImageView RectangleView,
      @NonNull Button buttonAttendanceCheck, @NonNull RelativeLayout checkIn,
      @NonNull RelativeLayout checkOut, @NonNull ImageView halfCircleView,
      @NonNull ImageView ivclockIn, @NonNull ImageView ivclockOut, @NonNull RelativeLayout main,
      @NonNull TextView tvTimer, @NonNull TextView tvtimeCheckIn,
      @NonNull TextView tvtimeCheckOut) {
    this.rootView = rootView;
    this.RectangleView = RectangleView;
    this.buttonAttendanceCheck = buttonAttendanceCheck;
    this.checkIn = checkIn;
    this.checkOut = checkOut;
    this.halfCircleView = halfCircleView;
    this.ivclockIn = ivclockIn;
    this.ivclockOut = ivclockOut;
    this.main = main;
    this.tvTimer = tvTimer;
    this.tvtimeCheckIn = tvtimeCheckIn;
    this.tvtimeCheckOut = tvtimeCheckOut;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CheckInOutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CheckInOutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.check_in_out, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CheckInOutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RectangleView;
      ImageView RectangleView = ViewBindings.findChildViewById(rootView, id);
      if (RectangleView == null) {
        break missingId;
      }

      id = R.id.buttonAttendanceCheck;
      Button buttonAttendanceCheck = ViewBindings.findChildViewById(rootView, id);
      if (buttonAttendanceCheck == null) {
        break missingId;
      }

      id = R.id.checkIn;
      RelativeLayout checkIn = ViewBindings.findChildViewById(rootView, id);
      if (checkIn == null) {
        break missingId;
      }

      id = R.id.checkOut;
      RelativeLayout checkOut = ViewBindings.findChildViewById(rootView, id);
      if (checkOut == null) {
        break missingId;
      }

      id = R.id.halfCircleView;
      ImageView halfCircleView = ViewBindings.findChildViewById(rootView, id);
      if (halfCircleView == null) {
        break missingId;
      }

      id = R.id.ivclock_in;
      ImageView ivclockIn = ViewBindings.findChildViewById(rootView, id);
      if (ivclockIn == null) {
        break missingId;
      }

      id = R.id.ivclock_out;
      ImageView ivclockOut = ViewBindings.findChildViewById(rootView, id);
      if (ivclockOut == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.tvTimer;
      TextView tvTimer = ViewBindings.findChildViewById(rootView, id);
      if (tvTimer == null) {
        break missingId;
      }

      id = R.id.tvtimeCheckIn;
      TextView tvtimeCheckIn = ViewBindings.findChildViewById(rootView, id);
      if (tvtimeCheckIn == null) {
        break missingId;
      }

      id = R.id.tvtimeCheckOut;
      TextView tvtimeCheckOut = ViewBindings.findChildViewById(rootView, id);
      if (tvtimeCheckOut == null) {
        break missingId;
      }

      return new CheckInOutBinding((RelativeLayout) rootView, RectangleView, buttonAttendanceCheck,
          checkIn, checkOut, halfCircleView, ivclockIn, ivclockOut, main, tvTimer, tvtimeCheckIn,
          tvtimeCheckOut);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
