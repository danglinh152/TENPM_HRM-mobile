// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RequestItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView itemEmployeeIvManagerApproved;

  @NonNull
  public final ImageView itemEmployeeIvManagerPending;

  @NonNull
  public final ImageView itemEmployeeIvManagerReject;

  @NonNull
  public final LinearLayout itemEmployeeLlParent;

  @NonNull
  public final TextView itemEmployeeTvFullname;

  @NonNull
  public final TextView itemEmployeeTvInfor;

  private RequestItemBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView itemEmployeeIvManagerApproved,
      @NonNull ImageView itemEmployeeIvManagerPending,
      @NonNull ImageView itemEmployeeIvManagerReject, @NonNull LinearLayout itemEmployeeLlParent,
      @NonNull TextView itemEmployeeTvFullname, @NonNull TextView itemEmployeeTvInfor) {
    this.rootView = rootView;
    this.itemEmployeeIvManagerApproved = itemEmployeeIvManagerApproved;
    this.itemEmployeeIvManagerPending = itemEmployeeIvManagerPending;
    this.itemEmployeeIvManagerReject = itemEmployeeIvManagerReject;
    this.itemEmployeeLlParent = itemEmployeeLlParent;
    this.itemEmployeeTvFullname = itemEmployeeTvFullname;
    this.itemEmployeeTvInfor = itemEmployeeTvInfor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RequestItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RequestItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.request_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RequestItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_employee_iv_manager_approved;
      ImageView itemEmployeeIvManagerApproved = ViewBindings.findChildViewById(rootView, id);
      if (itemEmployeeIvManagerApproved == null) {
        break missingId;
      }

      id = R.id.item_employee_iv_manager_pending;
      ImageView itemEmployeeIvManagerPending = ViewBindings.findChildViewById(rootView, id);
      if (itemEmployeeIvManagerPending == null) {
        break missingId;
      }

      id = R.id.item_employee_iv_manager_reject;
      ImageView itemEmployeeIvManagerReject = ViewBindings.findChildViewById(rootView, id);
      if (itemEmployeeIvManagerReject == null) {
        break missingId;
      }

      LinearLayout itemEmployeeLlParent = (LinearLayout) rootView;

      id = R.id.item_employee_tv_fullname;
      TextView itemEmployeeTvFullname = ViewBindings.findChildViewById(rootView, id);
      if (itemEmployeeTvFullname == null) {
        break missingId;
      }

      id = R.id.item_employee_tv_infor;
      TextView itemEmployeeTvInfor = ViewBindings.findChildViewById(rootView, id);
      if (itemEmployeeTvInfor == null) {
        break missingId;
      }

      return new RequestItemBinding((LinearLayout) rootView, itemEmployeeIvManagerApproved,
          itemEmployeeIvManagerPending, itemEmployeeIvManagerReject, itemEmployeeLlParent,
          itemEmployeeTvFullname, itemEmployeeTvInfor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
