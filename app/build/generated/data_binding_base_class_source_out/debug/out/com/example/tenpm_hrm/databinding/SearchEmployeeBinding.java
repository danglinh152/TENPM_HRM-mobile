// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchEmployeeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonSearch;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etBirthday;

  @NonNull
  public final EditText etCCCD;

  @NonNull
  public final EditText etDepartment;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etId;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPhone;

  @NonNull
  public final EditText etPosition;

  @NonNull
  public final RadioGroup genderGroup;

  @NonNull
  public final RadioButton radioFemale;

  @NonNull
  public final RadioButton radioMale;

  private SearchEmployeeBinding(@NonNull LinearLayout rootView, @NonNull Button buttonCancel,
      @NonNull Button buttonSearch, @NonNull EditText etAddress, @NonNull EditText etBirthday,
      @NonNull EditText etCCCD, @NonNull EditText etDepartment, @NonNull EditText etEmail,
      @NonNull EditText etId, @NonNull EditText etName, @NonNull EditText etPhone,
      @NonNull EditText etPosition, @NonNull RadioGroup genderGroup,
      @NonNull RadioButton radioFemale, @NonNull RadioButton radioMale) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSearch = buttonSearch;
    this.etAddress = etAddress;
    this.etBirthday = etBirthday;
    this.etCCCD = etCCCD;
    this.etDepartment = etDepartment;
    this.etEmail = etEmail;
    this.etId = etId;
    this.etName = etName;
    this.etPhone = etPhone;
    this.etPosition = etPosition;
    this.genderGroup = genderGroup;
    this.radioFemale = radioFemale;
    this.radioMale = radioMale;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchEmployeeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchEmployeeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.search_employee, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchEmployeeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSearch;
      Button buttonSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonSearch == null) {
        break missingId;
      }

      id = R.id.etAddress;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.etBirthday;
      EditText etBirthday = ViewBindings.findChildViewById(rootView, id);
      if (etBirthday == null) {
        break missingId;
      }

      id = R.id.etCCCD;
      EditText etCCCD = ViewBindings.findChildViewById(rootView, id);
      if (etCCCD == null) {
        break missingId;
      }

      id = R.id.etDepartment;
      EditText etDepartment = ViewBindings.findChildViewById(rootView, id);
      if (etDepartment == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etId;
      EditText etId = ViewBindings.findChildViewById(rootView, id);
      if (etId == null) {
        break missingId;
      }

      id = R.id.etName;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPhone;
      EditText etPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPhone == null) {
        break missingId;
      }

      id = R.id.etPosition;
      EditText etPosition = ViewBindings.findChildViewById(rootView, id);
      if (etPosition == null) {
        break missingId;
      }

      id = R.id.genderGroup;
      RadioGroup genderGroup = ViewBindings.findChildViewById(rootView, id);
      if (genderGroup == null) {
        break missingId;
      }

      id = R.id.radioFemale;
      RadioButton radioFemale = ViewBindings.findChildViewById(rootView, id);
      if (radioFemale == null) {
        break missingId;
      }

      id = R.id.radioMale;
      RadioButton radioMale = ViewBindings.findChildViewById(rootView, id);
      if (radioMale == null) {
        break missingId;
      }

      return new SearchEmployeeBinding((LinearLayout) rootView, buttonCancel, buttonSearch,
          etAddress, etBirthday, etCCCD, etDepartment, etEmail, etId, etName, etPhone, etPosition,
          genderGroup, radioFemale, radioMale);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
