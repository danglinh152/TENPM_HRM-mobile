// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEmployeeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageViewDetail;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final TextView tvDepartment;

  @NonNull
  public final TextView tvID;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPosition;

  private ItemEmployeeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageViewDetail, @NonNull ImageView ivDelete,
      @NonNull TextView tvDepartment, @NonNull TextView tvID, @NonNull TextView tvName,
      @NonNull TextView tvPosition) {
    this.rootView = rootView;
    this.imageViewDetail = imageViewDetail;
    this.ivDelete = ivDelete;
    this.tvDepartment = tvDepartment;
    this.tvID = tvID;
    this.tvName = tvName;
    this.tvPosition = tvPosition;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEmployeeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEmployeeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_employee, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEmployeeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView_Detail;
      ImageView imageViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (imageViewDetail == null) {
        break missingId;
      }

      id = R.id.ivDelete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.tvDepartment;
      TextView tvDepartment = ViewBindings.findChildViewById(rootView, id);
      if (tvDepartment == null) {
        break missingId;
      }

      id = R.id.tvID;
      TextView tvID = ViewBindings.findChildViewById(rootView, id);
      if (tvID == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPosition;
      TextView tvPosition = ViewBindings.findChildViewById(rootView, id);
      if (tvPosition == null) {
        break missingId;
      }

      return new ItemEmployeeBinding((ConstraintLayout) rootView, imageViewDetail, ivDelete,
          tvDepartment, tvID, tvName, tvPosition);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
