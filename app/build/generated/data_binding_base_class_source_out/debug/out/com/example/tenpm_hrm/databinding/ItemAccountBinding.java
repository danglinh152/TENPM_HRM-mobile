// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView ivAccountDetail;

  @NonNull
  public final ImageView ivDeleteAccount;

  @NonNull
  public final TextView tvAccountName;

  @NonNull
  public final TextView tvEmployeeId;

  @NonNull
  public final TextView tvEmployeeName;

  @NonNull
  public final TextView tvManagerType;

  private ItemAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ImageView ivAccountDetail,
      @NonNull ImageView ivDeleteAccount, @NonNull TextView tvAccountName,
      @NonNull TextView tvEmployeeId, @NonNull TextView tvEmployeeName,
      @NonNull TextView tvManagerType) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.ivAccountDetail = ivAccountDetail;
    this.ivDeleteAccount = ivDeleteAccount;
    this.tvAccountName = tvAccountName;
    this.tvEmployeeId = tvEmployeeId;
    this.tvEmployeeName = tvEmployeeName;
    this.tvManagerType = tvManagerType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout constraintLayout = (ConstraintLayout) rootView;

      id = R.id.iv_account_detail;
      ImageView ivAccountDetail = ViewBindings.findChildViewById(rootView, id);
      if (ivAccountDetail == null) {
        break missingId;
      }

      id = R.id.iv_delete_account;
      ImageView ivDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (ivDeleteAccount == null) {
        break missingId;
      }

      id = R.id.tv_account_name;
      TextView tvAccountName = ViewBindings.findChildViewById(rootView, id);
      if (tvAccountName == null) {
        break missingId;
      }

      id = R.id.tv_employee_id;
      TextView tvEmployeeId = ViewBindings.findChildViewById(rootView, id);
      if (tvEmployeeId == null) {
        break missingId;
      }

      id = R.id.tv_employee_name;
      TextView tvEmployeeName = ViewBindings.findChildViewById(rootView, id);
      if (tvEmployeeName == null) {
        break missingId;
      }

      id = R.id.tv_manager_type;
      TextView tvManagerType = ViewBindings.findChildViewById(rootView, id);
      if (tvManagerType == null) {
        break missingId;
      }

      return new ItemAccountBinding((ConstraintLayout) rootView, constraintLayout, ivAccountDetail,
          ivDeleteAccount, tvAccountName, tvEmployeeId, tvEmployeeName, tvManagerType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
