// Generated by view binder compiler. Do not edit!
package com.example.tenpm_hrm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tenpm_hrm.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateProjectBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonUpdateProject;

  @NonNull
  public final RelativeLayout inputContainer;

  @NonNull
  public final TextInputLayout inputUpdateProjectDesc;

  @NonNull
  public final TextInputLayout inputUpdateProjectID;

  @NonNull
  public final TextInputLayout inputUpdateProjectName;

  @NonNull
  public final TextInputLayout inputUpdateProjectParticipant;

  @NonNull
  public final ImageView ivHeader;

  @NonNull
  public final TextView labelUpdateIdProject;

  @NonNull
  public final TextView labelUpdateProjectDesc;

  @NonNull
  public final TextView labelUpdateProjectName;

  @NonNull
  public final TextView labelUpdateProjectParticipant;

  @NonNull
  public final RelativeLayout linearLayout;

  @NonNull
  public final RelativeLayout rlHeaderContainer;

  @NonNull
  public final TextView tvHeaderDescription;

  @NonNull
  public final TextView tvHeaderTitle;

  @NonNull
  public final TextView tvLabel;

  private UpdateProjectBinding(@NonNull RelativeLayout rootView,
      @NonNull Button buttonUpdateProject, @NonNull RelativeLayout inputContainer,
      @NonNull TextInputLayout inputUpdateProjectDesc,
      @NonNull TextInputLayout inputUpdateProjectID,
      @NonNull TextInputLayout inputUpdateProjectName,
      @NonNull TextInputLayout inputUpdateProjectParticipant, @NonNull ImageView ivHeader,
      @NonNull TextView labelUpdateIdProject, @NonNull TextView labelUpdateProjectDesc,
      @NonNull TextView labelUpdateProjectName, @NonNull TextView labelUpdateProjectParticipant,
      @NonNull RelativeLayout linearLayout, @NonNull RelativeLayout rlHeaderContainer,
      @NonNull TextView tvHeaderDescription, @NonNull TextView tvHeaderTitle,
      @NonNull TextView tvLabel) {
    this.rootView = rootView;
    this.buttonUpdateProject = buttonUpdateProject;
    this.inputContainer = inputContainer;
    this.inputUpdateProjectDesc = inputUpdateProjectDesc;
    this.inputUpdateProjectID = inputUpdateProjectID;
    this.inputUpdateProjectName = inputUpdateProjectName;
    this.inputUpdateProjectParticipant = inputUpdateProjectParticipant;
    this.ivHeader = ivHeader;
    this.labelUpdateIdProject = labelUpdateIdProject;
    this.labelUpdateProjectDesc = labelUpdateProjectDesc;
    this.labelUpdateProjectName = labelUpdateProjectName;
    this.labelUpdateProjectParticipant = labelUpdateProjectParticipant;
    this.linearLayout = linearLayout;
    this.rlHeaderContainer = rlHeaderContainer;
    this.tvHeaderDescription = tvHeaderDescription;
    this.tvHeaderTitle = tvHeaderTitle;
    this.tvLabel = tvLabel;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateProjectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateProjectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_project, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateProjectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonUpdateProject;
      Button buttonUpdateProject = ViewBindings.findChildViewById(rootView, id);
      if (buttonUpdateProject == null) {
        break missingId;
      }

      id = R.id.inputContainer;
      RelativeLayout inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.inputUpdateProjectDesc;
      TextInputLayout inputUpdateProjectDesc = ViewBindings.findChildViewById(rootView, id);
      if (inputUpdateProjectDesc == null) {
        break missingId;
      }

      id = R.id.inputUpdateProjectID;
      TextInputLayout inputUpdateProjectID = ViewBindings.findChildViewById(rootView, id);
      if (inputUpdateProjectID == null) {
        break missingId;
      }

      id = R.id.inputUpdateProjectName;
      TextInputLayout inputUpdateProjectName = ViewBindings.findChildViewById(rootView, id);
      if (inputUpdateProjectName == null) {
        break missingId;
      }

      id = R.id.inputUpdateProjectParticipant;
      TextInputLayout inputUpdateProjectParticipant = ViewBindings.findChildViewById(rootView, id);
      if (inputUpdateProjectParticipant == null) {
        break missingId;
      }

      id = R.id.ivHeader;
      ImageView ivHeader = ViewBindings.findChildViewById(rootView, id);
      if (ivHeader == null) {
        break missingId;
      }

      id = R.id.labelUpdateIdProject;
      TextView labelUpdateIdProject = ViewBindings.findChildViewById(rootView, id);
      if (labelUpdateIdProject == null) {
        break missingId;
      }

      id = R.id.labelUpdateProjectDesc;
      TextView labelUpdateProjectDesc = ViewBindings.findChildViewById(rootView, id);
      if (labelUpdateProjectDesc == null) {
        break missingId;
      }

      id = R.id.labelUpdateProjectName;
      TextView labelUpdateProjectName = ViewBindings.findChildViewById(rootView, id);
      if (labelUpdateProjectName == null) {
        break missingId;
      }

      id = R.id.labelUpdateProjectParticipant;
      TextView labelUpdateProjectParticipant = ViewBindings.findChildViewById(rootView, id);
      if (labelUpdateProjectParticipant == null) {
        break missingId;
      }

      RelativeLayout linearLayout = (RelativeLayout) rootView;

      id = R.id.rlHeaderContainer;
      RelativeLayout rlHeaderContainer = ViewBindings.findChildViewById(rootView, id);
      if (rlHeaderContainer == null) {
        break missingId;
      }

      id = R.id.tvHeaderDescription;
      TextView tvHeaderDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderDescription == null) {
        break missingId;
      }

      id = R.id.tvHeaderTitle;
      TextView tvHeaderTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHeaderTitle == null) {
        break missingId;
      }

      id = R.id.tvLabel;
      TextView tvLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvLabel == null) {
        break missingId;
      }

      return new UpdateProjectBinding((RelativeLayout) rootView, buttonUpdateProject,
          inputContainer, inputUpdateProjectDesc, inputUpdateProjectID, inputUpdateProjectName,
          inputUpdateProjectParticipant, ivHeader, labelUpdateIdProject, labelUpdateProjectDesc,
          labelUpdateProjectName, labelUpdateProjectParticipant, linearLayout, rlHeaderContainer,
          tvHeaderDescription, tvHeaderTitle, tvLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
